From 2b9534bd0af3a1308738b809e3d9083e3f8d0ed7 Mon Sep 17 00:00:00 2001
From: Peng Xu <pengxu@google.com>
Date: Thu, 21 Oct 2021 20:13:34 -0700
Subject: [PATCH] [Updated with gin] Adding randomizer in ars trainig. WIP, use
 with caution

This is the updated patch that includes the gin file changes.

The gin file change will apply to both run_ars_training.py (training) and run_ars_policy.py (demo)
---
 puppersim/pupper_pmtg.gin    | 10 +++-
 puppersim/push_randomizer.py | 93 ++++++++++++++++++++++++++++++++++++
 2 files changed, 102 insertions(+), 1 deletion(-)
 create mode 100644 puppersim/push_randomizer.py

diff --git a/puppersim/pupper_pmtg.gin b/puppersim/pupper_pmtg.gin
index 7da1fc5..7211908 100644
--- a/puppersim/pupper_pmtg.gin
+++ b/puppersim/pupper_pmtg.gin
@@ -12,9 +12,9 @@ import puppersim.pupper_locomotion_task
 import puppersim.pupper_terminal_conditions
 
 import puppersim.pupper_v2
+import puppersim.push_randomizer
 import pybullet_envs.minitaur.robots.robot_config
 
-
 UPPER_BOUND = 6.28318548203
 LOWER_BOUND = -6.28318548203
 SIM_TIME_STEP = 0.001
@@ -32,6 +32,14 @@ locomotion_gym_env.LocomotionGymEnv.gym_config = @locomotion_gym_config.Locomoti
 # Specify the scene.
 
 locomotion_gym_env.LocomotionGymEnv.scene = @simple_scene.SimpleScene()
+locomotion_gym_env.LocomotionGymEnv.env_randomizers = [
+  @push_randomizer.MinitaurPushRandomizer(),
+]
+push_randomizer.MinitaurPushRandomizer.horizontal_force_bound = [-50, 50]
+push_randomizer.MinitaurPushRandomizer.vertical_force_bound = [-50, 50]
+push_randomizer.MinitaurPushRandomizer.perturbation_start_step = 100
+push_randomizer.MinitaurPushRandomizer.perturbation_interval_steps=100
+push_randomizer.MinitaurPushRandomizer.perturbation_duration_steps=500
 
 # Specify the motor limits, and motor control mode.
 robot_config.MotorLimits.angle_lower_limits = %pupper_constants.MOTOR_ACTION_LOWER_LIMIT
diff --git a/puppersim/push_randomizer.py b/puppersim/push_randomizer.py
new file mode 100644
index 0000000..c48582d
--- /dev/null
+++ b/puppersim/push_randomizer.py
@@ -0,0 +1,93 @@
+"""Adds random forces to the base of Minitaur during the simulation steps."""
+
+from __future__ import absolute_import
+from __future__ import division
+from __future__ import print_function
+
+import gin
+
+import os, inspect
+currentdir = os.path.dirname(os.path.abspath(inspect.getfile(inspect.currentframe())))
+parentdir = os.path.dirname(os.path.dirname(currentdir))
+parentdir = os.path.dirname(os.path.dirname(parentdir))
+os.sys.path.insert(0, parentdir)
+
+import math
+import numpy as np
+from pybullet_envs.minitaur.envs import env_randomizer_base
+
+_PERTURBATION_START_STEP = 100
+_PERTURBATION_INTERVAL_STEPS = 200
+_PERTURBATION_DURATION_STEPS = 10
+_HORIZONTAL_FORCE_UPPER_BOUND = 120
+_HORIZONTAL_FORCE_LOWER_BOUND = 240
+_VERTICAL_FORCE_UPPER_BOUND = 300
+_VERTICAL_FORCE_LOWER_BOUND = 500
+
+
+@gin.configurable
+class MinitaurPushRandomizer(env_randomizer_base.EnvRandomizerBase):
+  """Applies a random impulse to the base of Minitaur."""
+
+  def __init__(
+      self,
+      perturbation_start_step=_PERTURBATION_START_STEP,
+      perturbation_interval_steps=_PERTURBATION_INTERVAL_STEPS,
+      perturbation_duration_steps=_PERTURBATION_DURATION_STEPS,
+      horizontal_force_bound=None,
+      vertical_force_bound=None,
+  ):
+    """Initializes the randomizer.
+    Args:
+      perturbation_start_step: No perturbation force before the env has advanced
+        this amount of steps.
+      perturbation_interval_steps: The step interval between applying
+        perturbation forces.
+      perturbation_duration_steps: The duration of the perturbation force.
+      horizontal_force_bound: The lower and upper bound of the applied force
+        magnitude when projected in the horizontal plane.
+      vertical_force_bound: The z component (abs value) bound of the applied
+        perturbation force.
+    """
+    self._perturbation_start_step = perturbation_start_step
+    self._perturbation_interval_steps = perturbation_interval_steps
+    self._perturbation_duration_steps = perturbation_duration_steps
+    self._horizontal_force_bound = (horizontal_force_bound if horizontal_force_bound else
+                                    [_HORIZONTAL_FORCE_LOWER_BOUND, _HORIZONTAL_FORCE_UPPER_BOUND])
+    self._vertical_force_bound = (vertical_force_bound if vertical_force_bound else
+                                  [_VERTICAL_FORCE_LOWER_BOUND, _VERTICAL_FORCE_UPPER_BOUND])
+
+  def randomize_env(self, env):
+    """Randomizes the simulation environment.
+    Args:
+      env: The Minitaur gym environment to be randomized.
+    """
+    pass
+
+  def randomize_step(self, env):
+    """Randomizes simulation steps.
+    Will be called at every timestep. May add random forces/torques to Minitaur.
+    Args:
+      env: The Minitaur gym environment to be randomized.
+    """
+    # base_link_ids = env.robot.robot_id
+    if env.env_step_counter % self._perturbation_interval_steps == 0:
+      # self._applied_link_id = base_link_ids[np.random.randint(0, len(base_link_ids))]
+      self._applied_link_id = -1
+      horizontal_force_magnitude = np.random.uniform(self._horizontal_force_bound[0],
+                                                     self._horizontal_force_bound[1])
+      theta = np.random.uniform(0, 2 * math.pi)
+      vertical_force_magnitude = np.random.uniform(self._vertical_force_bound[0],
+                                                   self._vertical_force_bound[1])
+      self._applied_force = horizontal_force_magnitude * np.array(
+          [math.cos(theta), math.sin(theta), 0]) + np.array([0, 0, -vertical_force_magnitude])
+
+    if (env.env_step_counter % self._perturbation_interval_steps <
+        self._perturbation_duration_steps) and (env.env_step_counter >=
+                                                self._perturbation_start_step):
+      env.pybullet_client.applyExternalForce(objectUniqueId=env.robot.robot_id,
+                                             linkIndex=self._applied_link_id,
+                                             forceObj=self._applied_force,
+                                             posObj=[0.0, 0.0, 0.0],
+                                             flags=env.pybullet_client.LINK_FRAME)
+      print("apply force", self._applied_force)
-- 
2.34.0.rc0.344.g81b53c2807-goog

